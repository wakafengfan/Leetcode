"""
输入一组10 x 10的数据，由#和.组成的迷宫，其中#代表墙，.代表通路，入口在第一行第二列，出口在最后一行第九列，

从任意一个.都能一步走到上下左右四个方向的.，请求出从入口到出口最短需要几步？

输入例子

#.########
#........#
#........#
#........#
#........#
#........#
#........#
#........#
#........#
########.#
结果为：16

#.########
#........#
########.#
#........#
#.########
#........#
########.#
#........#
#.######.#
########.#
结果为：30

"""


def maze(maze, start: tuple, dest: tuple):
    m, n = len(maze), len(maze[0])
    q = [(start, 0)]
    visited = {start}

    all_step = []

    direction = [(1, 0), (0, 1), (-1, 0), (0, -1)]  # 向右，向下，向左，向上

    while q:
        cur, cur_step = q.pop(0)

        if cur == dest:
            all_step.append(cur_step)

        for d in direction:
            tmp_step = cur_step + 1
            x = cur[0] + d[0]
            y = cur[1] + d[1]

            while 0 < x < m and 0 < y < n and maze[x][y] == 1:
                x += d[0]
                y += d[1]
                tmp_step += 1

            x -= d[0]
            y -= d[1]
            tmp_step -= 1

            if (x, y) not in visited:
                q.append(((x, y), tmp_step))
                visited.add((x, y))

    return min(all_step) if all_step else -1


maze_1 = [[0, 1, 0, 0, 0, 0, 0, 0, 0, 0], [0, 1, 1, 1, 1, 1, 1, 1, 1, 0]
    , [0, 0, 0, 0, 0, 0, 0, 0, 1, 0], [0, 1, 1, 1, 1, 1, 1, 1, 1, 0]
    , [0, 1, 0, 0, 0, 0, 0, 0, 0, 0], [0, 1, 1, 1, 1, 1, 1, 1, 1, 0]
    , [0, 0, 0, 0, 0, 0, 0, 0, 1, 0], [0, 1, 1, 1, 1, 1, 1, 1, 1, 0]
    , [0, 1, 0, 0, 0, 0, 0, 0, 1, 0], [0, 0, 0, 0, 0, 0, 0, 0, 1, 0]]

maze_2 = [[0, 1, 0, 0, 0, 0, 0, 0, 0, 0], [0, 1, 1, 1, 1, 1, 1, 1, 1, 0]
    , [0, 1, 1, 1, 1, 1, 1, 1, 1, 0], [0, 1, 1, 1, 1, 1, 1, 1, 1, 0]
    , [0, 1, 1, 1, 1, 1, 1, 1, 1, 0], [0, 1, 1, 1, 1, 1, 1, 1, 1, 0]
    , [0, 1, 1, 1, 1, 1, 1, 1, 1, 0], [0, 1, 1, 1, 1, 1, 1, 1, 1, 0]
    , [0, 1, 1, 1, 1, 1, 1, 1, 1, 0], [0, 0, 0, 0, 0, 0, 0, 0, 1, 0]]

print(maze(maze_1, (0, 1), (9, 8)))
print(maze(maze_2, (0, 1), (9, 8)))
